# from old student.csv assignment:
 #   require 'csv'
  #
   # def request(text)
#      admonishment = "Student names must be strings.  Student ages must be integers greater than 0.  Please try again."
 #     good_answer = false
  #    until good_answer do
   #     print text + ": "
    #    input = gets.chomp
     #   return input if validate_answer(input, text)
      #  puts admonishment
#      end
 #   end


#    def validate_answer (input, text)
 #     good_answer = false
  #    return true if input == "exit"
   #   if text.include? "age"
    #    if input.to_i > 0
     #     good_answer = true
      #  end
#      else
 #       if input.length > 0
  #        good_answer = true
   #     end
    #  end
     # good_answer
#    end

#    def add_student
 #     csv_file = "student_csv.csv"
  #    CSV.open(csv_file, "a") do |csv|
   #     while true do
    #      student_name = request "Please enter the student's name ('exit' to exit)"
     #    student_age = request "Please enter #{student_name}'s age('exit' to exit)"
      #    break if student_age == 'exit'
       #   csv << [student_name, student_age]
        # end
#        puts 'Thank you for using the program.  Your answers have been saved in student_csv.csv'
 #     end
  #  end

   # add_student

#require 'csv'

 class StudentEntry
   attr_accessor :first_name, :last_name, :age

   def initialize(first_name, last_name, age="mystery")
     @first_name = first_name
     @last_name = last_name
     @age = age.to_s
   end

   def save
     File.open('students.csv', 'a') do |student|
       student.write(self.to_csv)
     end
     puts "Wrote #{self.first_name} #{self.last_name}, age: #{self.age} to the file students.csv"
   end

   def to_csv
     CSV.generate do |csv|
       csv << [self.first_name, self.last_name, self.age]
     end
   end

 end

 student1 = StudentEntry.new('bob', 'thomas', 18)
 student1.save
 student2 = StudentEntry.new('sara', 'johnson')
 student2.save